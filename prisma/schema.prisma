datasource db {
    provider = "postgresql"
    url      = "postgresql://dbuser:dbpassword@localhost:5432/justcommerce"
}

generator client {
    provider = "prisma-client-js"
}

model User {
    id                     String   @id @default(cuid())
    createdAt              DateTime @default(now())
    email                  String   @unique
    password               String   @unique
    firstName              String?
    secondName             String?
    role                   Role     @relation(fields: [roleId], references: [id])
    roleId                 String
    orders                 Order[]  @relation("CreatedOrders")
    hasDashboardAccess     Boolean  @default(false)
    requiresPasswordChange Boolean  @default(false)
}

model Role {
    id        String   @id @default(cuid())
    name      String   @unique
    users     User[]
    createdAt DateTime @default(now())
}

model Product {
    id            String                @id @default(cuid())
    name          String
    description   String?
    createdAt     DateTime              @default(now())
    variantTypes  ProductVariantType[]
    variantValues ProductVariantValue[]
}

model ProductVariantType {
    id            String                @id @default(cuid())
    type          String
    createdAt     DateTime              @default(now())
    product       Product               @relation(fields: [productId], references: [id])
    productId     String
    variantValues ProductVariantValue[]
}

model ProductVariantValue {
    id                String             @id @default(cuid())
    value             String
    priceCurrencyCode String
    price             Decimal
    pictures          Json?
    createdAt         DateTime           @default(now())
    product           Product            @relation(fields: [productId], references: [id])
    productId         String
    variantType       ProductVariantType @relation(fields: [variantTypeId], references: [id])
    variantTypeId     String
    orderItems        OrderItem[]
}

model Order {
    id                  String      @id @default(cuid())
    createdBy           User        @relation("CreatedOrders", fields: [userId], references: [id])
    userId              String
    price               Decimal
    fulfilled           Boolean     @default(false)
    markedFulfilledById String?
    orderItems          OrderItem[]
    createdAt           DateTime    @default(now())
}

model OrderItem {
    id                    String              @id @default(cuid())
    Order                 Order               @relation(fields: [orderId], references: [id])
    orderId               String
    ProductVariantValue   ProductVariantValue @relation(fields: [productVariantValueId], references: [id])
    productVariantValueId String
    numberOfItems         Int
    pricePerItem          Decimal
    totalPrice            Decimal
}
